{"version":3,"sources":["components/Card.js","components/CardList.js","components/User.js","components/Search.js","components/Scroll.js","containers/App.js","action.js","constent.js","serviceWorker.js","reducer.js","index.js"],"names":["Card","id","name","email","className","style","width","height","src","alt","CardList","user","result","color","borderBottom","map","u","i","key","User","Search","searchChange","onChange","type","placeholder","Scroll","props","overflow","border","children","App","state","this","setState","searchField","onSearchChange","filteredUser","filter","users","toLowerCase","includes","arr","Object","entries","length","React","Component","connect","dispatch","e","payload","target","value","Boolean","window","location","hostname","match","initalState","stor","createStore","action","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4f8f8a81.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc grow bg-light-blue br3 pa3 ma2 dib bw2 shadow-5' >\r\n      <img style={{ width: '280px', height: '476.83px' }} src={`https://github.com/Mortida/noonan/blob/moro-feature/public/images/image${id}.jpg?raw=true`} alt='' />\r\n        <h4>{email}</h4>\r\n        <p>{name}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({user, result}) => {\r\n  return (\r\n    <div>\r\n      {<h3 style={{color:'white'}}>Search result: &nbsp;\r\n      <i style={{color:'#109dee', borderBottom:'4px double white'}}>\r\n      {result}</i>\r\n      </h3>}\r\n      {\r\n        user.map((u, i)=>{\r\n          return (<Card \r\n          key={i}\r\n          id={user[i].id}\r\n          name={user[i].name}\r\n          email={user[i].email}\r\n          />\r\n          )\r\n        })\r\n      }\r\n    </div>  \r\n  )\r\n}\r\nexport default CardList;","export const User = [\r\n  {\r\n    id: 1,\r\n    name: 'عدن محمود ايدام',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'عبدالناصر محمد',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'حماده اسماعيل و عبدالناصر',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'مجدي محمد ادم',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 7,\r\n    name: 'Kurtis Weissnat',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 8,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 9,\r\n    name: 'حماده اسماعيل و منهل',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 10,\r\n    name: 'Clementina DuBuque',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 11,\r\n    name: 'Leanne Graham',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 12,\r\n    name: 'Ervin Howell',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id:13,\r\n    name: 'Clementine Bauch',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 14,\r\n    name: 'Patricia Lebsack',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 15,\r\n    name: 'Chelsey Dietrich',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 16,\r\n    name: 'Mrs. Dennis Schulist',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id: 17,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 18,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 19,\r\n    name: 'Glenna Reichert',\r\n    email: 'Chaim_McDermott@dana.io'\r\n  },\r\n  {\r\n    id: 20,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Rey.Padberg@karina.biz'\r\n  },\r\n  {\r\n    id: 21,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Sincere@april.biz'\r\n  },\r\n  {\r\n    id: 22,\r\n    name: 'Ervin Howell',\r\n    email: 'Shanna@melissa.tv'\r\n  },\r\n  {\r\n    id: 23,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Nathan@yesenia.net'\r\n  },\r\n  {\r\n    id: 24,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Julianne.OConner@kory.org'\r\n  },\r\n  {\r\n    id: 25,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Lucio_Hettinger@annie.ca'\r\n  },\r\n  {\r\n    id: 26,\r\n    name: 'حماده اسماعيل ايدام',\r\n    email: 'Karley_Dach@jasper.info'\r\n  },\r\n  {\r\n    id:27,\r\n    name: 'حماده في الزحمه',\r\n    email: 'Telly.Hoeger@billy.biz'\r\n  },\r\n  {\r\n    id: 28,\r\n    name: 'حماده في الزحمه',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n  {\r\n    id: 29,\r\n    name: 'Nicholas Runolfsdottir V',\r\n    email: 'Sherwood@rosamond.me'\r\n  },\r\n];\r\n","import React from 'react';\r\n\r\nconst Search = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa3'>\r\n      <input \r\n      onChange={searchChange}\r\n      className='pa2 ba b--none br2  bg-light-blue'\r\n      type='search' \r\n      placeholder='Search' />\r\n    </div>\r\n  )\r\n}\r\nexport default Search;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style={{overflow: 'scroll', border: '1px solid white', height: '800px' }}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\nexport default Scroll;","import React from 'react';\r\nimport './App.css';\r\nimport {connect} from 'react-redux';\r\nimport CardList from '../components/CardList'\r\nimport { User } from '../components/User'\r\nimport Search from '../components/Search';\r\nimport Scroll from '../components/Scroll';\r\n\r\nimport {stSearchField} from '../action';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    searchField: state.searchField\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch)=>{\r\n  return {\r\n    onSearchChange: (e) => dispatch(stSearchField(e.target.value))\r\n  }\r\n}\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state = {\r\n      user: [],\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.setState({user: User})\r\n  }\r\n\r\n  render(){\r\n    const { user } = this.state;\r\n    const { searchField, onSearchChange } = this.props;\r\n    const filteredUser = user.filter(users => {\r\n      return users.name.toLowerCase().includes(searchField.toLowerCase())\r\n    })\r\n  \r\n    const arr = Object.entries(filteredUser);\r\n\r\n    return(\r\n    <div className='tc'>\r\n      <h1> My Memories 's My Priorities</h1>\r\n      <Search searchChange={onSearchChange}/>\r\n      <Scroll>\r\n        <CardList user={ filteredUser } result={arr.length}/>\r\n      </Scroll>\r\n    </div>\r\n  )\r\n  }\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import { CHANGE_SEARCH_FIELD } from './constent';\r\n\r\nexport const stSearchField = (text)=>({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n})","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import { CHANGE_SEARCH_FIELD } from './constent';\r\n\r\nconst initalState = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchUser = (state=initalState, action={})=>{\r\n  switch(action.type){\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {searchUser} from './reducer'\r\nimport 'tachyons'\r\n\r\nconst stor = createStore(searchUser)\r\n\r\nReactDOM.render(<Provider store={stor}>\r\n                    <App />\r\n                </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}