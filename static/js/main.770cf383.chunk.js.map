{"version":3,"sources":["components/Card.js","components/CardList.js","components/User.js","components/Search.js","components/Scroll.js","containers/App.js","action.js","constent.js","serviceWorker.js","reducer.js","index.js"],"names":["Card","id","name","email","className","style","width","height","src","alt","CardList","user","result","color","borderBottom","map","u","i","key","User","Search","searchChange","onChange","type","placeholder","Scroll","props","overflow","border","children","App","state","this","setState","searchField","onSearchChange","filteredUser","filter","users","toLowerCase","includes","arr","Object","entries","length","React","Component","connect","dispatch","e","payload","target","value","Boolean","window","location","hostname","match","initalState","stor","createStore","action","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.770cf383.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n  return (\r\n    <div className='tc grow bg-light-blue br3 pa3 ma2 dib bw2 shadow-5' >\r\n        <img style={{width: '280px', height:'476.83px'}} src={`../images/image${id}.jpg`} alt='' />\r\n        <h4>{email}</h4>\r\n        <p>{name}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({user, result}) => {\r\n  return (\r\n    <div>\r\n      {<h3 style={{color:'white'}}>Search result: &nbsp;\r\n      <i style={{color:'#109dee', borderBottom:'4px double white'}}>\r\n      {result}</i>\r\n      </h3>}\r\n      {\r\n        user.map((u, i)=>{\r\n          return (<Card \r\n          key={i}\r\n          id={user[i].id}\r\n          name={user[i].name}\r\n          email={user[i].email}\r\n          />\r\n          )\r\n        })\r\n      }\r\n    </div>  \r\n  )\r\n}\r\nexport default CardList;","export const User = [\n  {\n    id: 1,\n    name: 'عدن محمود ايدام',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'عبدالناصر محمد',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'حماده اسماعيل و عبدالناصر',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'مجدي محمد ادم',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'حماده اسماعيل و منهل',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 11,\n    name: 'Leanne Graham',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 12,\n    name: 'Ervin Howell',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id:13,\n    name: 'Clementine Bauch',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 14,\n    name: 'Patricia Lebsack',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 15,\n    name: 'Chelsey Dietrich',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 16,\n    name: 'Mrs. Dennis Schulist',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 17,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 18,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 19,\n    name: 'Glenna Reichert',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 20,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Rey.Padberg@karina.biz'\n  },\n  {\n    id: 21,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 22,\n    name: 'Ervin Howell',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 23,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 24,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 25,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 26,\n    name: 'حماده اسماعيل ايدام',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id:27,\n    name: 'حماده في الزحمه',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 28,\n    name: 'حماده في الزحمه',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 29,\n    name: 'Nicholas Runolfsdottir V',\n    email: 'Sherwood@rosamond.me'\n  },\n];\n","import React from 'react';\r\n\r\nconst Search = ({ searchChange }) => {\r\n  return (\r\n    <div className='pa3'>\r\n      <input \r\n      onChange={searchChange}\r\n      className='pa2 ba b--none br2  bg-light-blue'\r\n      type='search' \r\n      placeholder='Search' />\r\n    </div>\r\n  )\r\n}\r\nexport default Search;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n  return(\r\n    <div style={{overflow: 'scroll', border: '1px solid white', height: '800px' }}>\r\n      {props.children}\r\n    </div>\r\n  )\r\n}\r\nexport default Scroll;","import React from 'react';\nimport './App.css';\nimport {connect} from 'react-redux';\nimport CardList from '../components/CardList'\nimport { User } from '../components/User'\nimport Search from '../components/Search';\nimport Scroll from '../components/Scroll';\n\nimport {stSearchField} from '../action';\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchField\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n  return {\n    onSearchChange: (e) => dispatch(stSearchField(e.target.value))\n  }\n}\n\nclass App extends React.Component {\n  constructor(){\n    super()\n    this.state = {\n      user: [],\n    }\n  }\n\n  componentDidMount(){\n    this.setState({user: User})\n  }\n\n  render(){\n    const { user } = this.state;\n    const { searchField, onSearchChange } = this.props;\n    const filteredUser = user.filter(users => {\n      return users.name.toLowerCase().includes(searchField.toLowerCase())\n    })\n  \n    const arr = Object.entries(filteredUser);\n\n    return(\n    <div className='tc'>\n      <h1> My Memories 's My Priorities</h1>\n      <Search searchChange={onSearchChange}/>\n      <Scroll>\n        <CardList user={ filteredUser } result={arr.length}/>\n      </Scroll>\n    </div>\n  )\n  }\n  \n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { CHANGE_SEARCH_FIELD } from './constent';\r\n\r\nexport const stSearchField = (text)=>({\r\n  type: CHANGE_SEARCH_FIELD,\r\n  payload: text\r\n})","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_SEARCH_FIELD } from './constent';\r\n\r\nconst initalState = {\r\n  searchField: ''\r\n}\r\n\r\nexport const searchUser = (state=initalState, action={})=>{\r\n  switch(action.type){\r\n    case CHANGE_SEARCH_FIELD:\r\n      return { ...state, searchField: action.payload }\r\n    default:\r\n      return state;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport {searchUser} from './reducer'\nimport 'tachyons'\n\nconst stor = createStore(searchUser)\n\nReactDOM.render(<Provider store={stor}>\n                    <App />\n                </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}